server.port=8080
#spring.application.name=ok-web
# Thymeleaf Setting
spring.thymeleaf.cache=false
#spring.thymeleaf.mode=HTML5
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.encoding=UTF-8

#spring.thymeleaf.prefix=classpath:templates/
#spring.cloud.consul.host=localhost
#spring.cloud.consul.port=8500
#spring.cloud.consul.discovery.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.url=jdbc:mariadb://localhost:3306/blog?characterEncoding=utf-8&useSSL=false
spring.datasource.class-driver=org.mariadb.jdbc.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

spring.servlet.multipart.max-file-size = 10Mb
spring.servlet.multipart.max-request-size=100Mb

#\u56FE\u7247\u4E0A\u4F20\u5730\u5740
#blog.imageUrl=D:/upload/
#\u6587\u4EF6\u9884\u89C8\u5730\u5740
fileView.url=K:/hihi/META-INF/
#\u56FE\u7247http\u5730\u5740
blog.httpUrl=http://127.0.0.1:8080/imagePath/
#\u6A21\u677F\u5730\u5740
#template.path=D:/template/templates/freemarker/
#\u6A21\u677F\u751F\u6210\u9759\u6001html\u5730\u5740
#template.generate.path=E:/template/templates/
#\u9759\u6001\u8D44\u6E90\u8DEF\u5F84
#static.path=D:/template/templates/
